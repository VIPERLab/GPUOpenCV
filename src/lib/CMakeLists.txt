# Create object libraries, then create master library
# http://www.cmake.org/Wiki/CMake/Tutorials/Object_Library
add_subdirectory (simple)
add_subdirectory (complex)

#
# Build and install a single library or framework from our set of object libraries
#

set(GPUOPENCV_SRCS master.hpp master.cpp)
set(GPUOPENCV_PUBLIC_HDRS ${COMPLEX_PUBLIC_HDRS} ${SIMPLE_PUBLIC_HDRS} master.hpp)

message("GPUOPENCV_PUBLIC_HDRS ${GPUOPENCV_PUBLIC_HDRS}")

add_library(GPUOpenCV ${GPUOPENCV_SRCS} $<TARGET_OBJECTS:simple> $<TARGET_OBJECTS:complex>)

set_target_properties(GPUOpenCV PROPERTIES
  CXX_VISIBILITY_PRESET hidden 
  VISIBILITY_INLINES_HIDDEN 1
  VERSION ${GPUOPENCV_SOVERSION_MAJOR}.${GPUOPENCV_SOVERSION_MINOR}.${GPUOPENCV_SOVERSION_PATCH}
  SOVERSION ${GPUOPENCV_SOVERSION_MAJOR}
  INSTALL_NAME_DIR ${LIB_INSTALL_DIR}
  DEFINE_SYMBOL MAKE_GPUOPENCV_LIB
  LINK_INTERFACE_LIBRARIES ""
  PUBLIC_HEADER "${GPUOPENCV_PUBLIC_HDRS}" 
)

# TODO: Try RPATH syntax via https://github.com/galleon/CMakeOSX/blob/master/foo/CMakeLists.txt
#
# SET_TARGET_PROPERTIES(foo PROPERTIES
#    VERSION ${EXAMPLE_VERSION}
#    SOVERSION ${EXAMPLE_VERSION_MAJOR}
#    INSTALL_RPATH ${EXAMPLE_INSTALL_LIB_DIR}
#    INSTALL_NAME_DIR @rpath)

install(TARGETS GPUOpenCV
  FRAMEWORK DESTINATION ${FRAMEWORK_INSTALL_DIR}
  LIBRARY DESTINATION ${LIB_INSTALL_DIR}
  RUNTIME DESTINATION ${BIN_INSTALL_DIR}
  ARCHIVE DESTINATION ${LIB_INSTALL_DIR}
  PUBLIC_HEADER DESTINATION ${INCLUDE_INSTALL_DIR}/GPUOpenCV
)


