# Lineage:
#
# Source code taken from sample GPUImage ios Xcode project
#
# GPUImage/examples/iOS/SimpleVideoFilter/SimpleVideoFilter
#
# CMake stuff laboriously scrounged from various internet sources to enable Xcode generator
# build for iOS without mucking around with XCode manually.  I have a need for automatically
# generating simple ios applications (single view controller apps) via CMakeLists.txt.  This
# seems to be kind of supported, so I'm using this as a sample project to outline all of the
# steps required to achieve this.

cmake_minimum_required(VERSION 2.8.11)
project (SimpleVideoFilter)

include("$ENV{SUGAR_ROOT}/cmake/Sugar")
include(sugar_include) # <= not used?

sugar_include("./")
sugar_include("${SUGAR_ROOT}/examples/resources/ios/icons")
sugar_include("${SUGAR_ROOT}/examples/resources/ios/images")

set (DRISHTISDK_SIMPLE_VIDEO_FILTER_SRCS
  AppDelegate.h
  AppDelegate.mm
  SLSSimpleVideoFilterWindowController.h
  SLSSimpleVideoFilterWindowController.mm
  main.mm
  GPUImageRectangleGenerator.h	
  GPUImageRectangleGenerator.mm
  GPUImageRGB2Lab.h
  GPUImageRGB2Lab.m
#  NativeVideoFrameHandler.h
#  NativeVideoFrameHandler.mm
#  UIImage+OpenCV.h
#  UIImage+OpenCV.mm
)

set (RESOURCES Base.lproj/MainMenu.xib SLSSimpleVideoFilterWindowController.xib)

set(CMAKE_C_FLAGS "-x objective-c")
set(CMAKE_CXX_FLAGS "-x objective-c++")

add_executable (SimpleVideoFilter MACOSX_BUNDLE ${DRISHTISDK_SIMPLE_VIDEO_FILTER_SRCS} ${RESOURCES} )


# SET_SOURCE_FILES_PROPERTIES(${RESOURCES} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)

set(PRODUCT_NAME SimpleVideoFilter)
set(EXECUTABLE_NAME SimpleVideoFilter)
set(APP_IDENTIFIER com.elucideye.SimpleVideoFilter)

set_property (TARGET SimpleVideoFilter APPEND_STRING PROPERTY COMPILE_FLAGS "-fobjc-arc")

# http://ebitg.wordpress.com/2012/04/24/cmake-iphone-support/
# http://stackoverflow.com/questions/18700901/ios-cmake-installtargets-function-uses-wrong-folders
# http://stackoverflow.com/questions/19325989/how-to-set-xcode-only-active-arch-flag-with-cmake

CONFIGURE_FILE("${CMAKE_CURRENT_LIST_DIR}/Info.plist.in" "${CMAKE_CURRENT_BINARY_DIR}/${PROJ_NAME}.plist")

set_target_properties(SimpleVideoFilter PROPERTIES 
    MACOSX_BUNDLE_INFO_PLIST "${CMAKE_CURRENT_BINARY_DIR}/${PROJ_NAME}.plist"
    RESOURCE "${RESOURCES}"
    XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer: David Hirvonen"
    ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}"
    XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH "NO"
)

target_link_libraries(SimpleVideoFilter drishtisdk )

#https://github.com/phaser/tests/blob/master/TestGame/dev/CMakeLists.txt
ADD_FRAMEWORK( QuartzCore SimpleVideoFilter )
ADD_FRAMEWORK( ImageIO SimpleVideoFilter )
ADD_FRAMEWORK( CoreGraphics SimpleVideoFilter )
ADD_FRAMEWORK( CoreVideo SimpleVideoFilter )
ADD_FRAMEWORK( CoreMedia SimpleVideoFilter )
ADD_FRAMEWORK( CoreLocation SimpleVideoFilter )
ADD_FRAMEWORK( AVFoundation SimpleVideoFilter )
ADD_FRAMEWORK( GLKit SimpleVideoFilter )
ADD_FRAMEWORK( Accelerate SimpleVideoFilter )
ADD_FRAMEWORK( OpenGL SimpleVideoFilter )
#ADD_FRAMEWORK( UIKit SimpleVideoFilter )
#ADD_FRAMEWORK( opencv2 SimpleVideoFilter ${CMAKE_OSX_SYSROOT}/System/Library )
ADD_FRAMEWORK( GPUImage SimpleVideoFilter )

message("@@@@@@@@@@@ ${CMAKE_OSX_SYSROOT})  @@@@@@@@@@@@@@")




